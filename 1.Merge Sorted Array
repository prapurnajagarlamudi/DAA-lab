Merge Sorted Array

You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.
Merge nums1 and nums2 into a single array sorted in non-decreasing order.
The final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Explanation: The arrays we are merging are [1,2,3] and [2,5,6].
The result of the merge is [1,2,2,3,5,6] with the underlined elements coming from nums1.
Example 2:

Input: nums1 = [1], m = 1, nums2 = [], n = 0
Output: [1]
Explanation: The arrays we are merging are [1] and [].
The result of the merge is [1].
Example 3:

Input: nums1 = [0], m = 0, nums2 = [1], n = 1
Output: [1]
Explanation: The arrays we are merging are [] and [1].
The result of the merge is [1].
Note that because m = 0, there are no elements in nums1. The 0 is only there to ensure the merge result can fit in nums1.

Constraints:

nums1.length == m + n
nums2.length == n
0 <= m, n <= 200
1 <= m + n <= 200
-109 <= nums1[i], nums2[j] <= 109


source code:

#include<stdio.h>
#include<stdlib.h>

void merge(int* nums1, int nums1Size, int m, int* nums2, int nums2Size, int n)
{
    int i, i1, i2;
    i1 = m - 1;
    i2 = n - 1;
    i = nums1Size - 1;
    while (i1 >= 0 && i2 >= 0) 
    {
        if (nums1[i1] > nums2[i2]) 
        {
            nums1[i--] = nums1[i1--];
        } 
        else 
        {
            nums1[i--] = nums2[i2--];
        }
    }
    while (i2 >= 0) 
    {
        nums1[i--] = nums2[i2--];
    }
}

void main()
{
    int m,i,j,n,m1,n1;
    printf("enter number of elements in nums1:");
    scanf("%d",&m);
    printf("enter number of elements in nums2:");
    scanf("%d",&n);
    int nums1[m+n],nums2[n];
    printf("Enter elements in nums1:\n");
    for(i=0;i<m;i++)
    {
        scanf("%d",&nums1[i]);
    }
    printf("Enter elements in nums2:\n");
    for(i=0;i<n;i++)
    {
        scanf("%d",&nums2[i]);
    }
    printf("Array 1 is:");
    for(i=0;i<m;i++)
    {
        printf("%d ",nums1[i]);
    }
    printf("\nArray 2 is:");
    for(i=0;i<n;i++)
    {
        printf("%d ",nums2[i]);
    }
    printf("Array 1 is:\n");
    for(i=0;i<m;i++)
    {
        if(nums1[i]!=0)
        {
            m1=m1+1;
        }
    }
    for(i=0;i<n;i++)
    {
        if(nums2[i]!=0)
        {
            n1=n1+1;
        }
    }
    printf("The result of merge is:\n");
    merge(nums1,m,m1,nums2,n,n1);
    for(i=0;i<m;i++)
    {
        printf("%d ",nums1[i]);
    }
}

output:
enter number of elements in nums1:6
enter number of elements in nums2:3
Enter elements in nums1:
1 2 3 0 0 0
Enter elements in nums2:
2 5 6
Array 1 is:1 2 3 0 0 0 
Array 2 is:2 5 6 Array 1 is:
The result of merge is:
1 2 2 3 5 6
