You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (ui, vi, wi), where ui 
is the source node, vi is the target node, and wi is the time it takes for a signal to travel from source to target.We will send a signal from a given node k. 
Return the minimum time it takes for all the n nodes to receive the signal. If it is impossible for all the n nodes to receive the signal, return -1.

Example 1:
Input: times = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2
Output: 2

Example 2:
Input: times = [[1,2,1]], n = 2, k = 1
Output: 1

Exampl
Input: times = [[1,2,1]], n = 2, k = 2
Output: -1
 
Constraints:

1 <= k <= n <= 100
1 <= times.length <= 6000
times[i].length == 3
1 <= ui, vi <= n
ui != vi
0 <= wi <= 100
All the pairs (ui, vi) are unique. (i.e., no multiple edges.)


Source code:

#include<stdio.h>
#include<stdlib.h>
#include<math.h>

int networkDelayTime(int** times, int timesSize, int* timesColSize, int n, int k)
{
    int max=10000;
    int i,j,u,v,w;
    int *dist=(int*)malloc(n*sizeof(int));
    for(i=0;i<n;i++)
    {
        dist[i]=max;
    }
    dist[k-1]=0;
    for(i=0;i<n;i++)
    {
        for(j=0;j<timesSize;j++)
        {
            u=times[j][0]-1;
            v=times[j][1]-1;
            w=times[j][2];
            if(dist[v]>=dist[u]+w)
            {
                dist[v]=dist[u]+w;
            }
        }
    }
    int ans=0;
    for(i=0;i<n;i++)
    {
        if(dist[i]==max)
        {
            return -1;
        }
        ans=fmax(ans,dist[i]);
    }
    return ans;
}

int main()
{
    int n,k,ts,tcs,i,j;
    printf("enter no of nodes(n) : ");
    scanf("%d",&n);
    printf("enter starting node(k) : ");
    scanf("%d",&k);
    printf("enter no of edges : ");
    scanf("%d",&ts);
    printf("enter no of elements : ");
    scanf("%d",&tcs);
    printf("enter elements : \n");
    int** arr = (int**)malloc(ts * sizeof(int));
    for (i = 0; i < n; i++)
        arr[i] = (int*)malloc(tcs * sizeof(int));
    for (i = 0; i <ts; i++)
        for (j = 0; j < tcs; j++)
            scanf("%d",&arr[i][j]);
    int ans=networkDelayTime(arr,ts,&tcs,n,k);
    printf("Minimum time is : %d",ans);
}

output:

enter no of nodes(n) : 4
enter starting node(k) : 2
enter no of edges : 3
enter no of elements : 3
enter elements : 
2 1 1
2 3 1
3 4 1
Minimum time is : 2
